{"version":3,"sources":["../src/is-prototype-of-x.js"],"names":[],"mappings":"AAAA,OAAO,WAAP,MAAwB,cAAxB;AACA,OAAO,QAAP,MAAqB,aAArB;AAEA,IAAM,SAAS,GAAG,GAAG,WAAH,CAAe,aAAjC;AAEA;;;;;;;;;AAQA,eAAe,SAAS,aAAT,CAAuB,KAAvB,EAA8B,MAA9B,EAAsC;AACnD,SAAO,WAAW,CAAC,MAAD,CAAX,GAAsB,KAAtB,GAA8B,SAAS,CAAC,IAAV,CAAe,QAAQ,CAAC,KAAD,CAAvB,EAAgC,MAAhC,CAArC;AACD","file":"is-prototype-of-x.esm.js","sourcesContent":["import isPrimitive from 'is-primitive';\nimport toObject from 'to-object-x';\n\nconst isProtoOf = {}.constructor.isPrototypeOf;\n\n/**\n * This method checks if an object exists in another object's prototype chain.\n *\n * @param {object} proto -The proto object to search for.\n * @throws {TypeError} If proto is undefined or null.\n * @param {object} object -The object whose prototype chain will be searched.\n * @returns {boolean} Does the proto object lay in the prototype chain of object.\n */\nexport default function isPrototypeOf(proto, object) {\n  return isPrimitive(object) ? false : isProtoOf.call(toObject(proto), object);\n}\n"]}